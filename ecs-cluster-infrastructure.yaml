AWSTemplateFormatVersion: '2010-09-09'
Description: 'Infraestrutura ECS para o projeto BIA - Instâncias EC2 para cluster'

Parameters:
  ClusterName:
    Type: String
    Default: cluster-bia
    Description: Nome do cluster ECS existente
  
  InstanceType:
    Type: String
    Default: t3.micro
    Description: Tipo da instância EC2
    
  KeyPairName:
    Type: String
    Default: ""
    Description: Nome do Key Pair (opcional)

Resources:
  # Security Group para instâncias ECS
  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: bia-ec2
      GroupDescription: Security group para instancias ECS do projeto BIA
      VpcId: vpc-09e9102b46edf0375
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: "acesso publico HTTP"
      Tags:
        - Key: Name
          Value: bia-ec2

  # Regra adicional para portas dinâmicas ECS
  ECSSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref ECSSecurityGroup
      IpProtocol: tcp
      FromPort: 32768
      ToPort: 65535
      SourceSecurityGroupId: !Ref ECSSecurityGroup
      Description: "portas dinamicas ECS"

  # IAM Role para instâncias ECS
  ECSInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: bia-ecs-instance-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Tags:
        - Key: Name
          Value: bia-ecs-instance-role

  # Instance Profile
  ECSInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: bia-ecs-instance-profile
      Roles:
        - !Ref ECSInstanceRole

  # Launch Template para instâncias ECS
  ECSLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: bia-ecs-launch-template
      LaunchTemplateData:
        ImageId: ami-0c02fb55956c7d316  # Amazon Linux 2 ECS-optimized
        InstanceType: !Ref InstanceType
        IamInstanceProfile:
          Arn: !GetAtt ECSInstanceProfile.Arn
        SecurityGroupIds:
          - !Ref ECSSecurityGroup
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            echo ECS_CLUSTER=${ClusterName} >> /etc/ecs/ecs.config
            echo ECS_ENABLE_TASK_IAM_ROLE=true >> /etc/ecs/ecs.config
            yum update -y
            yum install -y amazon-ssm-agent
            systemctl enable amazon-ssm-agent
            systemctl start amazon-ssm-agent
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: bia-ecs-instance
              - Key: Project
                Value: BIA

  # Auto Scaling Group
  ECSAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: bia-ecs-asg
      LaunchTemplate:
        LaunchTemplateId: !Ref ECSLaunchTemplate
        Version: !GetAtt ECSLaunchTemplate.LatestVersionNumber
      MinSize: 1
      MaxSize: 2
      DesiredCapacity: 1
      VPCZoneIdentifier:
        - subnet-05ad43127af3cbec1  # us-east-1a
        - subnet-00097ce2f1f4ee658  # us-east-1b
      HealthCheckType: EC2
      HealthCheckGracePeriod: 300
      Tags:
        - Key: Name
          Value: bia-ecs-asg
          PropagateAtLaunch: false

Outputs:
  SecurityGroupId:
    Description: ID do Security Group criado
    Value: !Ref ECSSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-SecurityGroup"
      
  InstanceRoleArn:
    Description: ARN da IAM Role das instâncias
    Value: !GetAtt ECSInstanceRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-InstanceRole"
      
  AutoScalingGroupName:
    Description: Nome do Auto Scaling Group
    Value: !Ref ECSAutoScalingGroup
    Export:
      Name: !Sub "${AWS::StackName}-ASG"
